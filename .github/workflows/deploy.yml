name: Deploy to EC2

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main  # You can change this to any branch you want to trigger on

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH for EC2 access
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 3: SSH into EC2 and deploy
      - name: SSH into EC2 and deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Navigate to the app directory
            cd /home/ubuntu/my-app

            # Pull the latest code
            git reset --hard HEAD
            git pull origin main

            # Build the new Docker image (without cache)
            docker-compose build --no-cache

            # Start the new container in the background (no downtime)
            docker-compose up -d --remove-orphans --no-deps

            # Check logs for the newly started container
            docker logs -f open-webui  # Follow logs of the running container

            # Check if the new container is running
            NEW_CONTAINER=$(docker ps -q --filter "name=open-webui" | head -n 1)
            OLD_CONTAINER=$(docker ps -q --filter "name=open-webui" | tail -n 1)

            if [ -n "$NEW_CONTAINER" ] && [ "$NEW_CONTAINER" != "$OLD_CONTAINER" ]; then
              # Once the new container is running, stop the old container
              docker stop $OLD_CONTAINER
              docker rm $OLD_CONTAINER
            fi
          EOF
